#N canvas 570 94 1051 787 10;
#X obj 37 585 cnv 15 300 30 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 19 1148 hip~ 5;
#X floatatom 41 667 4 0 100 0 - - -;
#X obj 39 1095 *~;
#X floatatom 37 741 0 3 30 0 - - -;
#X obj 39 997 +~;
#X obj 38 949 samphold~;
#X obj 39 973 *~;
#X obj 204 1007 r~ phase;
#X obj 362 819 s~ phase;
#X obj 126 950 r~ phase;
#X obj 74 974 r~ phase;
#X obj 40 709 s chunk-size;
#X floatatom 373 653 0 0 0 0 - - -;
#X text 156 701 chunk size;
#X text 153 715 in seconds;
#X obj 374 688 r chunk-size;
#X obj 374 713 t b f;
#X obj 204 1031 -~ 0.5;
#X obj 204 1055 *~ 0.5;
#X obj 204 1078 cos~;
#X obj 362 793 phasor~;
#X obj 39 882 s~ read-pt;
#X obj 77 997 r~ read-pt;
#X obj 449 810 +~ 0.5;
#X obj 450 836 wrap~;
#X obj 450 861 s~ phase2;
#X obj 38 1124 +~;
#X text 396 652 <-- transposition \, halftones/10;
#X obj 40 686 * 0.001;
#X obj 39 834 phasor~;
#X obj 39 1071 tabread4~ table23;
#X obj 38 924 r chunk-size;
#X obj 38 1047 +~ 1;
#X floatatom 370 770 5 0 0 0 - - -;
#X obj 47 788 s precession;
#X obj 487 712 t b f;
#X obj 487 687 r precession;
#X obj 39 765 * 0.01;
#X obj 311 1107 *~;
#X obj 311 1009 +~;
#X obj 310 961 samphold~;
#X obj 311 985 *~;
#X obj 476 1043 -~ 0.5;
#X obj 476 1067 *~ 0.5;
#X obj 476 1090 cos~;
#X obj 349 1009 r~ read-pt;
#X obj 311 1083 tabread4~ table23;
#X obj 310 936 r chunk-size;
#X obj 310 1059 +~ 1;
#X obj 398 962 r~ phase2;
#X obj 346 986 r~ phase2;
#X obj 476 1019 r~ phase2;
#X text 69 742 <-- precession \, percent;
#X obj 40 622 loadbang;
#X text 43 593 TIME COMPRESSION/EXPANSION BY LOOPED SAMPLING;
#X text 143 1148 Here \, rather than ask you to push the read pointer
back and forth in the sample \, we use a phasor~. This makes it possible
to avoid the samphold~ on the read pointer (r~ read-pt) \, since \,
knowing the precession \, we can correct for it in computing the frequency
of the original phasor~ at right.;
#X floatatom 171 811 4 0 900 0 - - -;
#X obj 171 831 * 0.001;
#X text 80 666 <-- chunk size (msec);
#X obj 362 745 expr (pow(2 \, $f1/120)-$f3)/$f2;
#X obj 171 856 t b f;
#X obj 171 765 loadbang;
#X text 214 807 <-- loop length;
#X text 255 822 (msec);
#X obj 39 858 *~;
#X obj 39 810 /;
#X msg 171 789 900;
#X msg 40 644 0;
#X obj 311 1033 *~ 443550;
#X obj 39 1021 *~ 443550;
#X obj 452 123 cnv 15 300 60 empty empty empty 20 12 0 14 -261682 -66577
0;
#N canvas 26 555 660 275 table 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array table23 443550 float 0;
#X coords 0 1.02 443549 -1.02 200 130 1;
#X restore 442 61 graph;
#X text 444 195 --- 44103 samples ---;
#X obj 41 148 loadbang;
#X obj 45 44 adc~ 1;
#X obj 45 69 hip~ 5;
#X msg 60 91 bang;
#X text 101 91 <-- record;
#X text 134 155 v-- re-read original table;
#X obj 45 118 tabwrite~ table23;
#X obj 82 205 soundfiler;
#X floatatom 464 195 0 0 0 0 - - -;
#X msg 65 175 read -resize staycationFixed.wav table23;
#X connect 2 0 11 0;
#X connect 3 0 4 0;
#X connect 4 0 8 0;
#X connect 5 0 8 0;
#X connect 9 0 10 0;
#X connect 11 0 9 0;
#X coords 0 275 1 274 85 60 0;
#X restore 459 150 pd table;
#X obj 167 123 gemhead;
#X obj 167 221 pix_texture;
#X obj 167 244 rectangle 4 3;
#X obj 167 148 pix_video;
#X obj 167 170 pix_grey;
#X obj 190 196 s values;
#X obj 312 126 r values;
#X obj 312 155 pix_mean_color;
#X obj 312 179 unpack 0 0 0 0;
#X obj 312 203 +;
#X obj 312 226 +;
#X obj 312 248 / 3;
#X text 344 209 when converted to grey;
#X text 344 221 so its probably not;
#X text 345 232 necessary to average;
#X text 345 243 the 3 values;
#X text 344 199 RGB values are identical;
#X text 342 267 This value can be sent;
#X text 342 279 to the threshold value;
#X text 343 291 in pix_movement to;
#X text 343 303 dynamically compensate;
#X text 344 316 for changing light;
#X text 344 329 values;
#X floatatom 285 505 5 0 0 0 - - -;
#X obj 64 384 delta;
#X obj 64 410 abs;
#X obj 649 385 mapping/timeroll;
#X obj 674 303 hsl 128 15 0 1 0 1 empty empty empty -2 -8 0 10 -262130
-1 -1 2300 1;
#X floatatom 686 338 5 0 0 0 - - -;
#X obj 638 343 smooth;
#X floatatom 638 589 5 0 0 0 - - -;
#X floatatom 668 680 5 0 0 0 - - -;
#X obj 647 718 speedlim 100;
#X obj 638 649 clip 3 10;
#X obj 638 364 clip 0 20;
#X floatatom 293 275 5 0 0 0 - - -;
#X obj 204 452 spigot;
#X floatatom 65 478 5 0 0 0 - - -;
#X floatatom 64 504 5 0 0 0 - - -;
#X obj 638 619 * 50;
#X obj 64 435 * 200;
#X obj 103 477 < 0.12;
#X obj 105 384 cnv 15 200 60 empty empty empty 20 12 0 14 -261682 -66577
0;
#X text 109 390 Calculate change in movement;
#X obj 424 535 cnv 15 425 30 empty empty empty 20 12 0 14 -261682 -66577
0;
#X obj 418 385 mapping/timeroll;
#X obj -51 66 cnv 15 100 30 empty empty empty 20 12 0 14 -204786 -66577
0;
#X obj -40 138 gemwin;
#X msg -40 73 create \, 1;
#X msg -16 101 0 \, destroy;
#X obj 19 123 tgl 15 1 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj -56 210 cnv 15 100 50 empty empty empty 20 12 0 14 -204786 -66577
0;
#X obj -41 210 output~;
#X text -53 46 1.) Start video input. Click the green box.;
#X text 491 541 Raw input;
#X text 707 539 Smoothed input;
#X text 667 284 Adjusts input smoothing;
#X text 726 340 (default: 0.181);
#X text 707 641 Max/min threshold for loop speed...;
#X text -57 175 2.) Sound loop control.;
#X text -34 191 Turn up the volume;
#X text 108 409 Then make sure they don't spike;
#X text 109 421 with glitchy feed;
#X text 460 129 Click pd table below to load/edit loop sample;
#X connect 1 0 125 0;
#X connect 1 0 125 1;
#X connect 2 0 29 0;
#X connect 3 0 27 0;
#X connect 4 0 38 0;
#X connect 5 0 70 0;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X connect 8 0 18 0;
#X connect 10 0 6 1;
#X connect 11 0 7 1;
#X connect 13 0 60 0;
#X connect 16 0 17 0;
#X connect 17 0 60 0;
#X connect 17 1 60 1;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 3 1;
#X connect 21 0 9 0;
#X connect 21 0 24 0;
#X connect 23 0 5 1;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 27 0 1 0;
#X connect 29 0 12 0;
#X connect 30 0 65 0;
#X connect 31 0 3 0;
#X connect 32 0 6 0;
#X connect 33 0 31 0;
#X connect 36 0 60 0;
#X connect 36 1 60 2;
#X connect 37 0 36 0;
#X connect 38 0 35 0;
#X connect 38 0 66 0;
#X connect 39 0 27 1;
#X connect 40 0 69 0;
#X connect 41 0 42 0;
#X connect 42 0 40 0;
#X connect 43 0 44 0;
#X connect 44 0 45 0;
#X connect 45 0 39 1;
#X connect 46 0 40 1;
#X connect 47 0 39 0;
#X connect 48 0 41 0;
#X connect 49 0 47 0;
#X connect 50 0 41 1;
#X connect 51 0 42 1;
#X connect 52 0 43 0;
#X connect 54 0 68 0;
#X connect 57 0 58 0;
#X connect 58 0 61 0;
#X connect 58 0 65 1;
#X connect 60 0 21 0;
#X connect 60 0 34 0;
#X connect 61 0 66 0;
#X connect 61 1 66 1;
#X connect 62 0 67 0;
#X connect 65 0 22 0;
#X connect 66 0 30 0;
#X connect 67 0 57 0;
#X connect 68 0 2 0;
#X connect 69 0 49 0;
#X connect 70 0 33 0;
#X connect 73 0 76 0;
#X connect 74 0 75 0;
#X connect 76 0 77 0;
#X connect 77 0 78 0;
#X connect 77 0 74 0;
#X connect 79 0 80 0;
#X connect 80 1 81 0;
#X connect 81 0 82 0;
#X connect 81 1 82 1;
#X connect 81 2 83 1;
#X connect 82 0 83 0;
#X connect 83 0 84 0;
#X connect 84 0 108 0;
#X connect 96 0 102 0;
#X connect 96 0 118 0;
#X connect 97 0 98 0;
#X connect 98 0 113 0;
#X connect 100 0 101 0;
#X connect 100 0 102 1;
#X connect 102 0 107 0;
#X connect 103 0 112 0;
#X connect 105 0 4 0;
#X connect 106 0 104 0;
#X connect 106 0 105 0;
#X connect 107 0 99 0;
#X connect 107 0 103 0;
#X connect 108 0 97 0;
#X connect 109 0 96 0;
#X connect 110 0 114 0;
#X connect 111 0 109 1;
#X connect 112 0 106 0;
#X connect 113 0 109 0;
#X connect 113 0 110 0;
#X connect 114 0 111 0;
#X connect 121 0 120 0;
#X connect 122 0 120 0;
#X connect 123 0 120 0;
